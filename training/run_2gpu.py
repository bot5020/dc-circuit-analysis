#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –æ–±—É—á–µ–Ω–∏—è —Å DDP –Ω–∞ 2 GPU
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python training/run_2gpu.py
"""

import subprocess
import sys
import torch

def main():
    num_gpus = torch.cuda.device_count()
    
    print("=" * 80)
    print(f"üöÄ –ó–∞–ø—É—Å–∫ –æ–±—É—á–µ–Ω–∏—è –Ω–∞ {num_gpus} GPU")
    print("=" * 80)
    
    if num_gpus < 2:
        print("‚ùå –ù–∞–π–¥–µ–Ω–æ –º–µ–Ω—å—à–µ 2 GPU! –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞ 1 GPU...")
        cmd = [sys.executable, "training/rl_trainer.py"]
    else:
        print(f"‚úÖ –ó–∞–ø—É—Å–∫–∞–µ–º DDP –Ω–∞ {num_gpus} GPU...")
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º torchrun –¥–ª—è DDP
        cmd = [
            "torchrun",
            f"--nproc_per_node={num_gpus}",
            "--standalone",
            "training/rl_trainer.py"
        ]
    
    print(f"\nüìù –ö–æ–º–∞–Ω–¥–∞: {' '.join(cmd)}\n")
    
    try:
        subprocess.run(cmd, check=True)
        print("\n" + "=" * 80)
        print("‚úÖ –û–±—É—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        print("=" * 80)
    except subprocess.CalledProcessError as e:
        print("\n" + "=" * 80)
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—É—á–µ–Ω–∏–∏: {e}")
        print("=" * 80)
        sys.exit(1)
    except KeyboardInterrupt:
        print("\n" + "=" * 80)
        print("‚ö†Ô∏è  –û–±—É—á–µ–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        print("=" * 80)
        sys.exit(1)

if __name__ == "__main__":
    main()
