"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ DC Circuit Analysis Environment

–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:
- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–¥–∞—á
- –ü–æ–∫–∞–∑ –ø—Ä–æ–º–ø—Ç–∞ –∏ –æ—Ç–≤–µ—Ç–∞
- –ü—Ä–æ—Å—Ç–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è
"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å
sys.path.append(str(Path(__file__).parent))

from dc_circuit.game import DCCircuitGame
from config import CircuitConfig, VerifierConfig


def demo_generation():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–∞–¥–∞—á —Å –ø—Ä–æ–º–ø—Ç–æ–º –∏ –æ—Ç–≤–µ—Ç–æ–º."""
    # –°–æ–∑–¥–∞–µ–º –∏–≥—Ä—É —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
    circuit_config = CircuitConfig()
    verifier_config = VerifierConfig()
    game = DCCircuitGame(circuit_config, verifier_config)

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–∏–º–µ—Ä—ã —Ä–∞–∑–Ω–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
    for difficulty in [1, 3, 5]:
        print(f"\n--- –°–ª–æ–∂–Ω–æ—Å—Ç—å {difficulty} ---")

        data_list = game.generate(num_of_questions=1, difficulty=difficulty)

        if data_list:
            data = data_list[0]
            print(f"üìù –ü—Ä–æ–º–ø—Ç:\n{data.question}\n")
            print(f"‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {data.answer}")
            print(f"üìä –¢–∏–ø —Ü–µ–ø–∏: {data.metadata.get('circuit_type', 'unknown')}")
            print(f"üìä –¢–∏–ø –≤–æ–ø—Ä–æ—Å–∞: {data.metadata.get('question_type', 'unknown')}")
            print("-" * 50)
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    try:
        demo_generation()
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()